/* Generated by Together */

#include "ConcreteObserver.h"
#include "ConcreteObserver2.h"
#include "Observer.h"

int ConcreteObserver1::objectCount=0;
int ConcreteObserver2::objectCount=0;

#include <iostream>
using namespace std;

ConcreteObserver1::ConcreteObserver1(string name):name(name){
	cout << name  << ": " << __PRETTY_FUNCTION__ << endl;
}
void ConcreteObserver1::update(string const& subjectName, int callCount){
	cout << name << ". " << __PRETTY_FUNCTION__ << " from "
							<<subjectName <<" "<< callCount << endl;
}
void ConcreteObserver1::operation1(string const& subjectName, int callCount){
    cout << name << ". " << __PRETTY_FUNCTION__ << " from "
						<<subjectName <<" "<< callCount << endl;}
void ConcreteObserver1::operation2(string const& subjectName, int callCount){
    cout << name << ". " << __PRETTY_FUNCTION__ << " from "
						<<subjectName <<" "<< callCount << endl;}
void ConcreteObserver1::operation3(string const& subjectName, int callCount){
    cout << name << ". " << __PRETTY_FUNCTION__ << " from "
						<<subjectName <<" "<< callCount << endl;}
ConcreteObserver1::~ConcreteObserver1(){
	cout << name <<".~ConcreteObserver1()" << endl;
}
//=====================================================================
ConcreteObserver2::ConcreteObserver2(string name):name(name){
	cout << name  << ": " << __PRETTY_FUNCTION__ << endl;
}
ConcreteObserver2::~ConcreteObserver2(){
		cout <<"~ConcreteObserver2():"<<name<<endl;
}
void ConcreteObserver2::update(string const& subjectName, int callCount){
	cout << name << ". " << __PRETTY_FUNCTION__ << " from "
							<<subjectName <<" "<< callCount << endl;
}

