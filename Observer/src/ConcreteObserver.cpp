/* Generated by Together */

#include "ConcreteObserver.h"
#include "Observer.h"

int ConcreteObserver1::objectCount=0;
int ConcreteObserver2::objectCount=0;

ConcreteObserver1::ConcreteObserver1(string name):name(name){
	cout <<"ConcreteObserver1():"<<name<<endl;
}
ConcreteObserver1::ConcreteObserver1(string name, Subject& subject):name(name){

	AdapterTemplate< ConcreteObserver1> adapter1(*this, &ConcreteObserver1::operation3, subject);
	cout <<"ConcreteObserver1(Subject):"<< name << endl;
}
void ConcreteObserver1::update(string& subjectName, int callCount){
        cout	<< name << " ConcreteObserver1::update called from "
							<<subjectName <<" "<< callCount << endl;
}
void ConcreteObserver1::operation1(string& subjectName, int callCount){
        cout	<< name << " ConcreteObserver1::operation1 called from "
							<<subjectName <<" "<<  callCount << endl;
}
void ConcreteObserver1::operation2(string& subjectName, int callCount){
        cout	<< name << " ConcreteObserver1::operation2 called from "
							<<subjectName<<" "<<  callCount << endl;
}
void ConcreteObserver1::operation3(string& subjectName, int callCount){
        cout	<< name << " ConcreteObserver1::operation3 called from "
							<<subjectName <<" "<<  callCount << endl;
}
ConcreteObserver1::~ConcreteObserver1(){
		cout <<"~ConcreteObserver1():"<<name<<endl;
}
//=====================================================================
ConcreteObserver2::ConcreteObserver2(string name):name(name){
	cout <<"ConcreteObserver2():"<<name<<endl;
}
ConcreteObserver2::~ConcreteObserver2(){
		cout <<"~ConcreteObserver2():"<<name<<endl;
}
void ConcreteObserver2::update(string& subjectName, int callCount){
        cout	<< name << " ConcreteObserver2::update called from "
							<<subjectName <<" "<<  callCount << endl;
}
